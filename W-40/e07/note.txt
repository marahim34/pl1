import java.util.Scanner;

public class App {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);

        System.out.println(
                "Enter a password. The password must be at least 8 characters long and contain at least one uppercase letter (A-Z), one lowercase letter (a-z), and one digit (0-9).");

        while (true) {
            String pwd = input.nextLine();

            String result = validatePwd(pwd); // Get validation result
            if (result.equals("valid")) {
                System.out.println("Password is valid.");
                break; // Exit the loop if the password is valid
            } else {
                System.out.println(result); // Show detailed error message
                System.out.println("Please try again:");
            }
        }

        input.close(); // Close the scanner when done
    }

    // Method to validate the password and provide specific feedback
    public static String validatePwd(String pwd) {
        boolean hasUpper = false;
        boolean hasLower = false;
        boolean hasDigit = false;
        boolean hasMinLength = pwd.length() >= 8;

        // Check each character to see if it meets the criteria
        for (int i = 0; i < pwd.length(); i++) {
            char ch = pwd.charAt(i);

            if (isUpperCase(ch)) {
                hasUpper = true;
            } else if (isLowerCase(ch)) {
                hasLower = true;
            } else if (isNumber(ch)) {
                hasDigit = true;
            }
        }

        // Return specific feedback based on what's missing
        StringBuilder feedback = new StringBuilder("Password is invalid.");

        if (!hasMinLength) {
            feedback.append(" It must be at least 8 characters long.");
        }
        if (!hasUpper) {
            feedback.append(" It must contain at least one uppercase letter (A-Z).");
        }
        if (!hasLower) {
            feedback.append(" It must contain at least one lowercase letter (a-z).");
        }
        if (!hasDigit) {
            feedback.append(" It must contain at least one digit (0-9).");
        }

        // If all criteria are met
        if (hasMinLength && hasUpper && hasLower && hasDigit) {
            return "valid"; // All criteria are met
        }

        return feedback.toString(); // Return specific feedback about what's missing
    }

    public static boolean isUpperCase(char ch) {
        return (ch >= 'A' && ch <= 'Z');
    }

    public static boolean isLowerCase(char ch) {
        return (ch >= 'a' && ch <= 'z');
    }

    public static boolean isNumber(char ch) {
        return (ch >= '0' && ch <= '9'); // Corrected this to check for digits
    }
}
